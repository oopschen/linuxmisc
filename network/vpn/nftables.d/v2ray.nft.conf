#!/sbin/nft -f

# 1.variable definition
define int_tproxy_mark = 0x1
define ipv4_tproxy_addr = 127.0.0.1
define int_tproxy_port = 1280
define ipv4_v2r_server = 45.136.185.61

# 1.init table
add table tbl_v2r

# 2. init set for host private ips and ignore ips
## check at https://en.wikipedia.org/wiki/Reserved_IP_addresses
add set ip tbl_v2r host_pri_sub_ipv4 { type ipv4_addr; flags constant, interval; auto-merge; \
 elements = { 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24, 192.168.0.0/16, \
            10.0.0.0/8, 198.18.0.0/15, 255.255.255.255/32, $ipv4_v2r_server } }

## *must add elements after rule working, first add server ip*
add set ip tbl_v2r tproxy_ignore_ipv4 { type ipv4_addr; flags interval; \
    auto-merge; }

# 3.prerouting chain: proxy the mark packets to local v2ray port
add chain tbl_v2r prerouting { type filter hook prerouting priority mangle; }

add rule tbl_v2r prerouting ip daddr @host_pri_sub_ipv4 return
## tproxy to local address when test packets has the mark set
add rule tbl_v2r prerouting meta l4proto { tcp, udp } \
    meta mark set $int_tproxy_mark \
    tproxy to $ipv4_tproxy_addr:$int_tproxy_port \
    accept

# 4.output chain: some ip set mark info
add chain tbl_v2r output { type route hook output priority mangle; }

## make private networks, v2ray server, ignored ip go to direct
add rule tbl_v2r output ip daddr @host_pri_sub_ipv4 return
add rule tbl_v2r output ip daddr @tproxy_ignore_ipv4 return

## mark packets and they will go through prerouting accordding to netfilter doc
add rule tbl_v2r output meta l4proto { tcp, udp } \
    meta mark set $int_tproxy_mark \
    accept 


# ?
#add chain tbl_v2r divert { type filter hook prerouting priority -150; }
#add rule tbl_v2r divert meta l4proto tcp \
#    socket transparent 1 \
#    meta mark set $int_tproxy_mark accept
